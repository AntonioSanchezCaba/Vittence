{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Downloads\\\\P\\xE1gina WEB\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { auth, googleProvider } from \"./firebase\"; // Importa Firebase Auth y el proveedor de Google\nimport { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\"; // Métodos de Firebase\nimport { FaGoogle } from \"react-icons/fa\"; // Ícono de Google\nimport { Link } from \"react-router-dom\"; // Para enlaces (si usas react-router-dom)\nimport \"./Login.css\"; // Estilos (si los tienes)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\"); // Estado para el correo\n  const [password, setPassword] = useState(\"\"); // Estado para la contraseña\n\n  // Función para iniciar sesión con correo y contraseña\n  const handleLogin = async e => {\n    e.preventDefault(); // Evita que el formulario se recargue\n    try {\n      await signInWithEmailAndPassword(auth, email, password); // Inicia sesión\n      alert(\"Inicio de sesión exitoso\");\n    } catch (error) {\n      alert(error.message); // Muestra un mensaje de error si falla\n    }\n  };\n\n  // Función para iniciar sesión con Google\n  const handleGoogleLogin = async () => {\n    try {\n      await signInWithPopup(auth, googleProvider); // Inicia sesión con Google\n      alert(\"Inicio de sesión con Google exitoso\");\n    } catch (error) {\n      alert(error.message); // Muestra un mensaje de error si falla\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Correo electr\\xF3nico\",\n        value: email,\n        onChange: e => setEmail(e.target.value) // Actualiza el estado del correo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: password,\n        onChange: e => setPassword(e.target.value) // Actualiza el estado de la contraseña\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      className: \"google-btn\",\n      children: [/*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \" Iniciar con Google\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\xBFNo tienes una cuenta? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Reg\\xEDstrate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","auth","googleProvider","signInWithEmailAndPassword","signInWithPopup","FaGoogle","Link","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","handleLogin","e","preventDefault","alert","error","message","handleGoogleLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/anton/Downloads/Página WEB/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { auth, googleProvider } from \"./firebase\"; // Importa Firebase Auth y el proveedor de Google\r\nimport { signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\"; // Métodos de Firebase\r\nimport { FaGoogle } from \"react-icons/fa\"; // Ícono de Google\r\nimport { Link } from \"react-router-dom\"; // Para enlaces (si usas react-router-dom)\r\nimport \"./Login.css\"; // Estilos (si los tienes)\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\"); // Estado para el correo\r\n  const [password, setPassword] = useState(\"\"); // Estado para la contraseña\r\n\r\n  // Función para iniciar sesión con correo y contraseña\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault(); // Evita que el formulario se recargue\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password); // Inicia sesión\r\n      alert(\"Inicio de sesión exitoso\");\r\n    } catch (error) {\r\n      alert(error.message); // Muestra un mensaje de error si falla\r\n    }\r\n  };\r\n\r\n  // Función para iniciar sesión con Google\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      await signInWithPopup(auth, googleProvider); // Inicia sesión con Google\r\n      alert(\"Inicio de sesión con Google exitoso\");\r\n    } catch (error) {\r\n      alert(error.message); // Muestra un mensaje de error si falla\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Iniciar Sesión</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Correo electrónico\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)} // Actualiza el estado del correo\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Contraseña\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)} // Actualiza el estado de la contraseña\r\n        />\r\n        <button type=\"submit\">Iniciar Sesión</button>\r\n      </form>\r\n\r\n      {/* Botón para iniciar sesión con Google */}\r\n      <button onClick={handleGoogleLogin} className=\"google-btn\">\r\n        <FaGoogle /> Iniciar con Google\r\n      </button>\r\n\r\n      {/* Enlace para registrarse */}\r\n      <p>\r\n        ¿No tienes una cuenta? <Link to=\"/register\">Regístrate</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}